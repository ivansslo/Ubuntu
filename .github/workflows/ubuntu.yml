name: Ubuntu

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Adding Architecture amd64
      run: |
        sudo apt update
        sudo apt install -y qemu-user-static binfmt-support
        sudo dpkg --add-architecture amd64
        sudo apt update
        sudo apt install libc6:amd64
    - name: Creating New User
      run: |
        user=vssdav
        password=${{ secrets.TUNNEL_KEY }}
        sudo adduser --quiet --disabled-password --shell /bin/bash --home /home/$user --gecos "User" $user
        # set password
        echo "$user:$password" | sudo chpasswd
        echo User: $user has been created with password: $password
        sudo usermod -aG sudo $user
        #SCRIPT END
    - name: Tunneling
      run: wget -O ngrok.tgz https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
    - name: Extract
      run: sudo tar -xvzf ngrok.tgz
    - name: Executable
      run: sudo cp ./ngrok /usr/bin/ngrok
    - name: Authenticating
      run: ngrok authtoken $NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
#      run: ngrok config add-authtoken $Env:NGROK_AUTH_TOKEN
    - name: Install Libraries
      run: |
        wget https://raw.githubusercontent.com/vsseclab/Ubuntu/master/distro/ubuntu
        sudo bash ubuntu
    - name: Entry
      run: |
        sudo bash -c 'cat > /etc/polkit-1/localauthority.conf.d/02-allow-colord.conf' << EOF
        polkit.addRule(function(action, subject) {
        if ((action.id == "org.freedesktop.color-manager.create-device" ||
        action.id == "org.freedesktop.color-manager.create-profile" ||
        action.id == "org.freedesktop.color-manager.delete-device" ||
        action.id == "org.freedesktop.color-manager.delete-profile" ||
        action.id == "org.freedesktop.color-manager.modify-device" ||
        action.id == "org.freedesktop.color-manager.modify-profile") &&
        subject.isInGroup("{users}")) {
        return polkit.Result.YES;
        }
        });
        EOF
    - name: Configurasi
      run: |
       sudo ufw allow 3389/tcp #setting tcp port
       if [ -f /home/${USER}/.xsession ]; then #session manager
           rm -f /home/${USER}/.xsession
       fi
       cat << 'EOF' >> /home/${USER}/.xsession
       export LOGNAME=$USER
       export LIBGL_ALWAYS_INDIRECT=1
       unset SESSION_MANAGER
       unset DBUS_SESSION_BUS_ADDRESS
       mate-session
       EOF
       chmod +x /home/${USER}/.xsession #session manager
    - name: Run Bash
      run: sudo sed -i "s|#\!/bin/sh|#\!/bin/bash|g" /etc/X11/Xsession
    - name: Starting
      run: |
        sudo adduser xrdp ssl-cert
        sudo service xrdp restart
        sudo service xrdp status
    - name: Config Vim
      run: |
        sudo apt install nano -y
        echo `cat /etc/xrdp/xrdp.ini`

    - name: Create Tunnel
      run: ngrok tcp 3389  &
    - name: Connection
      run: curl --silent http://127.0.0.1:4040/api/tunnels | jq '.tunnels[0].public_url'
    - name: Time
      run: wget https://gist.githubusercontent.com/vssdav/81d8974e0ce97eecf033ac6e2fb6bd66/raw/loop.sh
    - name: Keep Alive
      run: sudo bash loop.sh
